#!/bin/bash
export PATH="$PATH:/home/simon/Apps/bin"
export VISUAL=vim;
export EDITOR=vim;

alias mkdir='mkdir -pv'
alias ll="ls -lAh"
alias r="ranger"
alias a="sudo apt"
alias A="sudo apt install"
alias p="pip"
alias P="pip install"
alias python="python3"
alias pip="pip3"
alias pip2="/home/simon/.local/bin/pip"
alias q="exit"
alias tb="nc termbin.com 9999"
alias wifi="nmtui"
alias config='/usr/bin/git --git-dir=/home/simon/.cfg/ --work-tree=/home/simon'
alias configMaster='/usr/bin/git --git-dir=/home/simon/.cfg/ --work-tree=/home/simon commit -a -m "Auto backup!"; /usr/bin/git --git-dir=/home/simon/.cfg/ --work-tree=/home/simon pull && /usr/bin/git --git-dir=/home/simon/.cfg/ --work-tree=/home/simon push'
alias configSlave='/usr/bin/git --git-dir=/home/simon/.cfg/ --work-tree=/home/simon pull --force'
alias watch="watch -n.1"
alias xclipp="xclip -selection clipboard"
alias help='cat $HOME/Scripts/my-scripts/help_message'
alias gong='playerctl pause && mpv https://bigsoundbank.com/UPLOAD/wav/1483.wav --volume=150 && playerctl play'
alias nyan='curl https://poptart.spinda.net'
alias b='cd ~/.Downloads; run_remote_file python3 https://gist.githubusercontent.com/Shirobachi/293c92aaa24dd57068c6e5775ee23cb0/raw/budget.py 06a74c8261eba81d8fd1c363e738d938; cd -'
alias cm='cd ~/Documents/magently/'

function c() {
	# curl with all parameters
	curl -s cheat.sh/"$*"
}

function CODE(){
  code $1 && q
}

function hot(){
    ls "$2" | entr "$1" "$2" "$3"
}

function alarm(){
	termdown "$1" && gong && termdown
}

# $1 - running command
# $2 - url
# #3 - hash
# $4 - timeout (oprional)
function run_remote_file(){
	if [ -f '/tmp/remote_file' ]; then
		rm '/tmp/remote_file'
	fi

	# set $4 to default value if not set
	if [ -z "$4" ]; then
		timeout=300
	else
		timeout=$4
	fi
	echo "Downloading remote file..."
	curl -L --max-time "$timeout" -s "$2" -o /tmp/remote_file || { echo "Download failed" && return 1; }

	hash=$(md5sum /tmp/remote_file 2>/dev/null) || return &&
	hash=$(echo "$hash" | cut -d ' ' -f 1) &&
	if [ "$hash" != "$3" ]; then
		echo "File change detected! New hash: $hash"
		return
	else
		clear
		$1 /tmp/remote_file
	fi

	if [ -f '/tmp/remote_file' ]; then
		rm '/tmp/remote_file'
	fi
}

# if file called .bash_no_backup exists, run this
if [ -f "$HOME/.bash_no_backup" ]; then
		# shellcheck source=/dev/null
		source "$HOME/.bash_no_backup"
fi

#neofetch
